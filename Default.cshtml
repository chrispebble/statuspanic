@{
    string rotate;
    string width;
    dynamic jsonData;
    
    Page.Title = "Title goes here";

    string rawData = File.ReadAllText(Server.MapPath("~/config.json"));
    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();

    serializer.RegisterConverters(new System.Web.Script.Serialization.JavaScriptConverter[] { new DynamicJsonConverter() });
    jsonData = serializer.Deserialize(rawData, typeof(object)) as DynamicJsonConverter.DynamicJsonObject;

    if (jsonData.rotate == "left") {
        rotate = "-webkit-transform: rotate(-90deg);";
    }
    else if (jsonData.rotate == "right") {
        rotate = "-webkit-transform: rotate(90deg);";
    }
    else if (jsonData.rotate == "flip") {
        rotate = "-webkit-transform: rotate(180deg);";
    }

    width = string.IsNullOrWhiteSpace(jsonData.width as string) ? "100%" : jsonData.width + "px";
}
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en-US" xml:lang="en-US" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title><%= (jsonData.Title != null ? jsonData.Title : "statuspanic generic status board")  %></title>
    <link rel='stylesheet' type='text/css' href='resources/panic.css' />
    <script type='text/javascript' src='resources/jquery.js'></script>
    <script type='text/javascript' src='resources/board.js'></script>
    <style type='text/css'>
        #board {
        <%if (!string.IsNullOrWhiteSpace(this.rotate)) {
            Response.Write(this.rotate);
            Response.Write("height: " + width);
        } else {
            Response.Write("width: " + width);
        } %>
    }
    </style>
</head>
<body>
    <div id='board'>
        @foreach(dynamic module in jsonData.modules) {

            string style = module.width + "px;";
            if (module.height != null) { style += " height:" + module.height + "px;"; }

            string argumentString = string.Empty;
            if (module.args != null) {
                module.args.width = module.width;
                List<string> arguments = new List<string>(); 
                foreach (string key in module.args.GetDictionary().Keys) {
                    arguments.Add(key + "=" + HttpUtility.UrlEncode(module.args.GetDictionary()[key].ToString()));
                }
                argumentString = string.Join("&", arguments);
            }

            <div class="module @(module.@class)" id="@module.name" style="@style"></div>
            <script type="text/javascript">activate_module("@module.name", @module.update, "@Html.Raw(argumentString)");</script>

        }
    </div>
</body>
</html>
